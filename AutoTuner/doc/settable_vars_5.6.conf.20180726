{
    "auto_increment_increment": {
        "opt_name": "auto_increment_increment",
        "type": "integer",
        "default": "1",
        "min": "1",
        "max": "65535",
        "desc": "Controls the interval between successive column values.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "auto_increment_offset": {
        "opt_name": "auto_increment_offset",
        "type": "integer",
        "default": "1",
        "min": "1",
        "max": "65535",
        "desc": "Determines the starting point for the AUTO_INCREMENT column value.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "back_log": {
        "opt_name": "back_log",
        "type": "integer",
        "default": "1",
        "min": "1",
        "max": "65535",
        "desc": "The number of outstanding connection requests MySQL can have.",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "binlog_cache_size": {
        "opt_name": "binlog_cache_size",
        "type": "integer",
        "default": "32768",
        "min": "4096",
        "max": "18446744073709551615",
        "desc": "The size of the cache to hold changes to the binary log during a transaction",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "binlog_checksum": {
        "opt_name": "binlog_checksum",
        "type": "string",
        "default": "NONE",
        "min": "0",
        "max": "0",
        "desc": "Include checksum for log events in the binary log. None indicates only check length.",
        "enum_value": [
            "NONE",
            "CRC32"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "binlog_format": {
        "opt_name": "binlog_format",
        "type": "enum",
        "default": "MIXED",
        "min": "0",
        "max": "0",
        "desc": "What form of binary logging the master will use.",
        "enum_value": [
            "ROW",
            "MIXED"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "binlog_max_flush_queue_time": {
        "opt_name": "binlog_max_flush_queue_time",
        "type": "integer",
        "default": "0",
        "min": "0",
        "max": "100000",
        "desc": "How long in microseconds to keep reading transactions from the flush queue before proceeding with the group commit",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "binlog_order_commits": {
        "opt_name": "binlog_order_commits",
        "type": "boolean",
        "default": "ON",
        "min": "0",
        "max": "0",
        "desc": "If this variable is enabled (the default), transactions are committed in the same order they are written to the binary log",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "binlog_row_image": {
        "opt_name": "binlog_row_image",
        "type": "enum",
        "default": "MINIMAL",
        "min": "0",
        "max": "0",
        "desc": "Controls what formats that rows should be logged in.",
        "enum_value": [
            "FULL",
            "MINIMAL"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "character_set_server": {
        "opt_name": "character_set_server",
        "type": "string",
        "default": "latin1",
        "min": "0",
        "max": "0",
        "desc": "Specify default server character set",
        "enum_value": [
            "latin1",
            "utf8",
            "gbk",
            "utf8mb4"
        ],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "concurrent_insert": {
        "opt_name": "concurrent_insert",
        "type": "enum",
        "default": "AUTO",
        "min": "0",
        "max": "0",
        "desc": "If AUTO (the default), MySQL permits INSERT and SELECT statements to run concurrently for MyISAM tables that have no free blocks in the middle of the data file.",
        "enum_value": [
            "NEVER",
            "AUTO",
            "ALWAYS"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "connect_timeout": {
        "opt_name": "connect_timeout",
        "type": "integer",
        "default": "10",
        "min": "2",
        "max": "1800",
        "desc": "The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "default_week_format": {
        "opt_name": "default_week_format",
        "type": "integer",
        "default": "0",
        "min": "0",
        "max": "7",
        "desc": "The default mode value to use for the WEEK() function",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "delay_key_write": {
        "opt_name": "delay_key_write",
        "type": "enum",
        "default": "ON",
        "min": "0",
        "max": "0",
        "desc": "This option applies only to MyISAM tables. It can have one of the following values to affect handling of the DELAY_KEY_WRITE table option that can be used in CREATE TABLE statements.",
        "enum_value": [
            "ON",
            "OFF",
            "ALL"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "delayed_insert_limit": {
        "opt_name": "delayed_insert_limit",
        "type": "integer",
        "default": "100",
        "min": "1",
        "max": "4294967295",
        "desc": "After inserting delayed_insert_limit rows, the INSERT DELAYED handler will check if there are any SELECT statements pending. If so, it allows these to execute before continuing.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "delayed_insert_timeout": {
        "opt_name": "delayed_insert_timeout",
        "type": "integer",
        "default": "300",
        "min": "1",
        "max": "3600",
        "desc": "How long a INSERT DELAYED thread should wait for INSERT statements before terminating.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "delayed_queue_size": {
        "opt_name": "delayed_queue_size",
        "type": "integer",
        "default": "1000",
        "min": "1",
        "max": "4294967295",
        "desc": "What size queue (in rows) should be allocated for handling INSERT DELAYED. If the queue becomes full, any client that does INSERT DELAYED will wait until there is room in the queue again.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "div_precision_increment": {
        "opt_name": "div_precision_increment",
        "type": "integer",
        "default": "4",
        "min": "0",
        "max": "30",
        "desc": "This variable indicates the number of digits by which to increase the scale of the result of division operations performed with the operator",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "eq_range_index_dive_limit": {
        "opt_name": "eq_range_index_dive_limit",
        "type": "integer",
        "default": "10",
        "min": "0",
        "max": "4294967295",
        "desc": "The optimizer will use existing index statistics instead of doing index dives for equality ranges if the number of equality ranges for the index is larger than or equal to this number. If set to 0, index dives are always used.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "event_scheduler": {
        "opt_name": "event_scheduler",
        "type": "enum",
        "default": "OFF",
        "min": "0",
        "max": "0",
        "desc": "This variable indicates the status of the Event Scheduler",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "explicit_defaults_for_timestamp": {
        "opt_name": "explicit_defaults_for_timestamp",
        "type": "boolean",
        "default": "OFF",
        "min": "0",
        "max": "0",
        "desc": "This option causes CREATE TABLE to create all TIMESTAMP columns as NULL with DEFAULT NULL attribute, Without this option, TIMESTAMP columns are NOT NULL and have implicit DEFAULT clauses.",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "ft_min_word_len": {
        "opt_name": "ft_min_word_len",
        "type": "integer",
        "default": "4",
        "min": "1",
        "max": "84",
        "desc": "The minimum length of the word to be included in a FULLTEXT index. Note: FULLTEXT indexes must be rebuilt after changing this variable.",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "ft_query_expansion_limit": {
        "opt_name": "ft_query_expansion_limit",
        "type": "integer",
        "default": "20",
        "min": "0",
        "max": "1000",
        "desc": "Number of best matches to use for query expansion",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "group_concat_max_len": {
        "opt_name": "group_concat_max_len",
        "type": "integer",
        "default": "1024",
        "min": "4",
        "max": "4294967295",
        "desc": "The maximum permitted result length in bytes for the GROUP_CONCAT() function",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_adaptive_flushing": {
        "opt_name": "innodb_adaptive_flushing",
        "type": "boolean",
        "default": "ON",
        "min": "0",
        "max": "0",
        "desc": "Specifies whether to dynamically adjust the rate of flushing dirty pages in the InnoDB buffer pool based on the workload",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_adaptive_flushing_lwm": {
        "opt_name": "innodb_adaptive_flushing_lwm",
        "type": "integer",
        "default": "10",
        "min": "0",
        "max": "70",
        "desc": "Defines the low water mark representing percentage of redo log capacity at which adaptive flushing is enabled",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_adaptive_hash_index": {
        "opt_name": "innodb_adaptive_hash_index",
        "type": "boolean",
        "default": "ON",
        "min": "0",
        "max": "0",
        "desc": "Whether the InnoDB adaptive hash index is enabled or disabled.",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_adaptive_max_sleep_delay": {
        "opt_name": "innodb_adaptive_max_sleep_delay",
        "type": "integer",
        "default": "150000",
        "min": "0",
        "max": "1000000",
        "desc": "Permits InnoDB to automatically adjust the value of innodb_thread_sleep_delay up or down according to the current workload",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_additional_mem_pool_size": {
        "opt_name": "innodb_additional_mem_pool_size",
        "type": "integer",
        "default": "8388608",
        "min": "2097152",
        "max": "4294967295",
        "desc": "The size in bytes of a memory pool InnoDB uses to store data dictionary information and other internal data structures.",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "innodb_autoinc_lock_mode": {
        "opt_name": "innodb_autoinc_lock_mode",
        "type": "integer",
        "default": "1",
        "min": "0",
        "max": "2",
        "desc": "The lock mode to use for generating auto-increment values.",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "innodb_autoextend_increment": {
        "opt_name": "innodb_autoextend_increment",
        "type": "integer",
        "default": "64",
        "min": "1",
        "max": "1000",
        "desc": "The increment size (in megabytes) for extending the size of an auto-extending InnoDB system tablespace file when it becomes full",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_buffer_pool_dump_at_shutdown": {
        "opt_name": "innodb_buffer_pool_dump_at_shutdown",
        "type": "boolean",
        "default": "OFF",
        "min": "0",
        "max": "0",
        "desc": "Specifies whether to record the pages cached in the InnoDB buffer pool when the MySQL server is shut down, to shorten the warmup process at the next restart",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_buffer_pool_load_at_startup": {
        "opt_name": "innodb_buffer_pool_load_at_startup",
        "type": "boolean",
        "default": "OFF",
        "min": "0",
        "max": "0",
        "desc": "Specifies that, on MySQL server startup, the InnoDB buffer pool is automatically warmed up by loading the same pages it held at an earlier time",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "innodb_buffer_pool_size": {
        "opt_name": "innodb_buffer_pool_size",
        "type": "integer",
        "default": "134217728",
        "min": "5242880",
        "max": "18446744073709551615",
        "desc": "The size in bytes of the buffer pool, the memory area where InnoDB caches table and index data.",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "innodb_buffer_pool_instances": {
        "opt_name": "innodb_buffer_pool_instances",
        "type": "integer",
        "default": "1",
        "min": "1",
        "max": "64",
        "desc": "The number of regions that the InnoDB buffer pool is divided into.",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "innodb_change_buffer_max_size": {
        "opt_name": "innodb_change_buffer_max_size",
        "type": "integer",
        "default": "25",
        "min": "0",
        "max": "50",
        "desc": "Maximum size for the InnoDB change buffer, as a percentage of the total size of the buffer pool",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_commit_concurrency": {
        "opt_name": "innodb_commit_concurrency",
        "type": "integer",
        "default": "0",
        "min": "0",
        "max": "1000",
        "desc": "The number of threads that can commit at the same time",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_concurrency_tickets": {
        "opt_name": "innodb_concurrency_tickets",
        "type": "integer",
        "default": "5000",
        "min": "1",
        "max": "4294967295",
        "desc": "Determines the number of threads that can enter InnoDB concurrently",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_disable_sort_file_cache": {
        "opt_name": "innodb_disable_sort_file_cache",
        "type": "boolean",
        "default": "OFF",
        "min": "0",
        "max": "0",
        "desc": "Disables the operating system file system cache for merge-sort temporary files. The effect is to open such files with the equivalent of O_DIRECT.",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_file_per_table": {
        "opt_name": "innodb_file_per_table",
        "type": "boolean",
        "default": "OFF",
        "min": "0",
        "max": "0",
        "desc": "When innodb_file_per_table is enabled (the default), InnoDB stores the data and indexes for each newly created table in a separate .ibd file instead of the system tablespace",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_flush_log_at_timeout": {
        "opt_name": "innodb_flush_log_at_timeout",
        "type": "integer",
        "default": "1",
        "min": "1",
        "max": "2700",
        "desc": "Write and flush the logs every N seconds",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_flush_log_at_trx_commit": {
        "opt_name": "innodb_flush_log_at_trx_commit",
        "type": "integer",
        "default": "1",
        "min": "0",
        "max": "2",
        "desc": "Controls the balance between strict ACID compliance for commit operations, and higher performance that is possible when commit-related I/O operations are rearranged and done in batches.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_flush_neighbors": {
        "opt_name": "innodb_flush_neighbors",
        "type": "enum",
        "default": "1",
        "min": "0",
        "max": "0",
        "desc": "Specifies whether flushing a page from the InnoDB buffer pool also flushes other dirty pages in the same extent.",
        "enum_value": [
            "0",
            "1",
            "2"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_flushing_avg_loops": {
        "opt_name": "innodb_flushing_avg_loops",
        "type": "integer",
        "default": "30",
        "min": "1",
        "max": "1000",
        "desc": "Number of iterations for which InnoDB keeps the previously calculated snapshot of the flushing state, controlling how quickly adaptive flushing responds to changing workloads",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_ft_enable_stopword": {
        "opt_name": "innodb_ft_enable_stopword",
        "type": "boolean",
        "default": "ON",
        "min": "0",
        "max": "0",
        "desc": "Create FTS index with stopword.",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_ft_max_token_size": {
        "opt_name": "innodb_ft_max_token_size",
        "type": "integer",
        "default": "84",
        "min": "10",
        "max": "84",
        "desc": "Maximum character length of words that are stored in an InnoDB FULLTEXT index.",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "innodb_ft_min_token_size": {
        "opt_name": "innodb_ft_min_token_size",
        "type": "integer",
        "default": "3",
        "min": "0",
        "max": "16",
        "desc": "Minimum length of words that are stored in an InnoDB FULLTEXT index.",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "innodb_ft_server_stopword_table": {
        "opt_name": "innodb_ft_server_stopword_table",
        "type": "string",
        "default": "NULL",
        "min": "0",
        "max": "0",
        "desc": "The user supplied stopword table name.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_ft_user_stopword_table": {
        "opt_name": "innodb_ft_user_stopword_table",
        "type": "string",
        "default": "NULL",
        "min": "0",
        "max": "0",
        "desc": "User supplied stopword table name, effective in the session level.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_io_capacity": {
        "opt_name": "innodb_io_capacity",
        "type": "integer",
        "default": "200",
        "min": "100",
        "max": "18446744073709551615",
        "desc": "The innodb_io_capacity parameter sets an upper limit on the number of I/O operations performed per second by InnoDB background tasks",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_large_prefix": {
        "opt_name": "innodb_large_prefix",
        "type": "boolean",
        "default": "OFF",
        "min": "0",
        "max": "0",
        "desc": "Enable this option to allow index key prefixes longer than 767 bytes (up to 3072 bytes) for InnoDB tables that use the DYNAMIC and COMPRESSED row formats.",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_lock_wait_timeout": {
        "opt_name": "innodb_lock_wait_timeout",
        "type": "integer",
        "default": "7200",
        "min": "1",
        "max": "1073741824",
        "desc": "The length of time in seconds an InnoDB transaction waits for a row lock before giving up",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_log_buffer_size": {
        "opt_name": "innodb_log_buffer_size",
        "type": "integer",
        "default": "8388608",
        "min": "262144",
        "max": "4294967295",
        "desc": "The size in bytes of the buffer that InnoDB uses to write to the log files on disk.",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "innodb_log_files_in_group": {
        "opt_name": "innodb_log_files_in_group",
        "type": "integer",
        "default": "2",
        "min": "2",
        "max": "100",
        "desc": "The number of log files in the log group.",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "innodb_log_file_size": {
        "opt_name": "innodb_log_file_size",
        "type": "integer",
        "default": "50331648",
        "min": "1048576",
        "max": "274877906944",
        "desc": "The size in bytes of each log file in a log group.",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "innodb_lru_scan_depth": {
        "opt_name": "innodb_lru_scan_depth",
        "type": "integer",
        "default": "1024",
        "min": "100",
        "max": "18446744073709551615",
        "desc": "A parameter that influences the algorithms and heuristics for the flush operation for the InnoDB buffer pool.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_max_dirty_pages_pct": {
        "opt_name": "innodb_max_dirty_pages_pct",
        "type": "integer",
        "default": "75",
        "min": "0",
        "max": "99",
        "desc": "InnoDB tries to flush data from the buffer pool so that the percentage of dirty pages does not exceed this value",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_max_dirty_pages_pct_lwm": {
        "opt_name": "innodb_max_dirty_pages_pct_lwm",
        "type": "integer",
        "default": "0",
        "min": "0",
        "max": "99",
        "desc": "Defines a low water mark representing the percentage of dirty pages at which preflushing is enabled to control the dirty page ratio",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_max_purge_lag": {
        "opt_name": "innodb_max_purge_lag",
        "type": "integer",
        "default": "0",
        "min": "0",
        "max": "4294967295",
        "desc": "Defines the maximum length of the purge queue. The default value of 0 indicates no limit (no delays).",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_numa_interleave": {
        "opt_name": "",
        "type": "boolean",
        "default": "OFF",
        "min": "0",
        "max": "0",
        "desc": "Enables the NUMA interleave memory policy for allocation of the InnoDB buffer pool.",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "innodb_old_blocks_pct": {
        "opt_name": "innodb_old_blocks_pct",
        "type": "integer",
        "default": "37",
        "min": "5",
        "max": "95",
        "desc": "Specifies the approximate percentage of the InnoDB buffer pool used for the old block sublist",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_old_blocks_time": {
        "opt_name": "innodb_old_blocks_time",
        "type": "integer",
        "default": "1000",
        "min": "0",
        "max": "4294967295",
        "desc": "Specifies the approximate percentage of the InnoDB buffer pool used for the old block sublist",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_online_alter_log_max_size": {
        "opt_name": "innodb_online_alter_log_max_size",
        "type": "integer",
        "default": "134217728",
        "min": "134217728",
        "max": "2147483647",
        "desc": "Maximum modification log file size for online index creation",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_open_files": {
        "opt_name": "innodb_open_files",
        "type": "integer",
        "default": "300",
        "min": "1",
        "max": "8192",
        "desc": "It specifies the maximum number of .ibd files that MySQL can keep open at one time.",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "innodb_print_all_deadlocks": {
        "opt_name": "innodb_print_all_deadlocks",
        "type": "boolean",
        "default": "OFF",
        "min": "0",
        "max": "0",
        "desc": "When this option is enabled, information about all deadlocks in InnoDB user transactions is recorded in the mysqld error log.",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_purge_batch_size": {
        "opt_name": "innodb_purge_batch_size",
        "type": "integer",
        "default": "300",
        "min": "1",
        "max": "5000",
        "desc": "The granularity of changes, expressed in units of redo log records, that trigger a purge operation, flushing the changed buffer pool blocks to disk.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_purge_threads": {
        "opt_name": "innodb_purge_threads",
        "type": "integer",
        "default": "1",
        "min": "1",
        "max": "32",
        "desc": "The number of background threads devoted to the InnoDB purge operation.",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "innodb_random_read_ahead": {
        "opt_name": "innodb_random_read_ahead",
        "type": "boolean",
        "default": "OFF",
        "min": "0",
        "max": "0",
        "desc": "Enables the random read-ahead technique for optimizing InnoDB I/O. ",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_read_ahead_threshold": {
        "opt_name": "innodb_read_ahead_threshold",
        "type": "integer",
        "default": "56",
        "min": "0",
        "max": "64",
        "desc": "Controls the sensitivity of linear read-ahead that InnoDB uses to prefetch pages into the buffer pool",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_read_io_threads": {
        "opt_name": "innodb_read_io_threads",
        "type": "integer",
        "default": "4",
        "min": "1",
        "max": "64",
        "desc": "The number of I/O threads for read operations in InnoDB.",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "innodb_replication_delay": {
        "opt_name": "",
        "type": "integer",
        "default": "0",
        "min": "0",
        "max": "4294967295",
        "desc": "The replication thread delay in milliseconds on a slave server if innodb_thread_concurrency is reached.",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "innodb_rollback_on_timeout": {
        "opt_name": "innodb_rollback_on_timeout",
        "type": "boolean",
        "default": "OFF",
        "min": "0",
        "max": "0",
        "desc": "InnoDB rolls back only the last statement on a transaction timeout by default",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "innodb_rollback_segments": {
        "opt_name": "innodb_rollback_segments",
        "type": "integer",
        "default": "128",
        "min": "1",
        "max": "128",
        "desc": "Defines the number of rollback segments used by InnoDB for data-modifying transactions that generate undo records. Each rollback segment can support a maximum of 1023 data-modifying transactions",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_spin_wait_delay": {
        "opt_name": "innodb_spin_wait_delay",
        "type": "integer",
        "default": "6",
        "min": "0",
        "max": "18446744073709551615",
        "desc": "The maximum delay between polls for a spin lock. ",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_stats_method": {
        "opt_name": "innodb_stats_method",
        "type": "enum",
        "default": "nulls_equal",
        "min": "0",
        "max": "0",
        "desc": "",
        "enum_value": [
            "nulls_equal",
            "nulls_unequal",
            "nulls_ignored"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_stats_on_metadata": {
        "opt_name": "innodb_stats_on_metadata",
        "type": "boolean",
        "default": "OFF",
        "min": "0",
        "max": "0",
        "desc": "When this variable is enabled, InnoDB updates statistics when metadata statements such as SHOW TABLE STATUS or SHOW INDEX are run, or when accessing the INFORMATION_SCHEMA tables TABLES or STATISTICS",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_stats_sample_pages": {
        "opt_name": "innodb_stats_sample_pages",
        "type": "integer",
        "default": "8",
        "min": "1",
        "max": "4294967296",
        "desc": "The number of index pages to sample when calculating statistics",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_stats_transient_sample_pages": {
        "opt_name": "innodb_stats_transient_sample_pages",
        "type": "integer",
        "default": "8",
        "min": "1",
        "max": "4294967296",
        "desc": "The number of leaf index pages to sample when calculating transient statistics",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_sync_array_size": {
        "opt_name": "innodb_sync_array_size",
        "type": "integer",
        "default": "1",
        "min": "1",
        "max": "1024",
        "desc": "Defines the size of the mutex/lock wait array. Increasing the value splits the internal data structure used to coordinate threads, for higher concurrency in workloads with large numbers of waiting threads.",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "innodb_sync_spin_loops": {
        "opt_name": "innodb_sync_spin_loops",
        "type": "integer",
        "default": "30",
        "min": "0",
        "max": "4294967295",
        "desc": "The number of times a thread waits for an InnoDB mutex to be freed before the thread is suspended.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_strict_mode": {
        "opt_name": "innodb_strict_mode",
        "type": "boolean",
        "default": "OFF",
        "min": "0",
        "max": "0",
        "desc": "When innodb_strict_mode is ON, InnoDB returns errors rather than warnings for certain conditions",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_table_locks": {
        "opt_name": "innodb_table_locks",
        "type": "boolean",
        "default": "ON",
        "min": "0",
        "max": "0",
        "desc": "If autocommit = 0, InnoDB honors LOCK TABLES; MySQL does not return from LOCK TABLES ... WRITE until all other threads have released all their locks to the table. The default value of innodb_table_locks is 1, which means that LOCK TABLES causes InnoDB to lock a table internally if autocommit = 0.",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_thread_concurrency": {
        "opt_name": "innodb_thread_concurrency",
        "type": "integer",
        "default": "0",
        "min": "0",
        "max": "1000",
        "desc": "InnoDB tries to keep the number of operating system threads concurrently inside InnoDB less than or equal to the limit given by this variable.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_thread_sleep_delay": {
        "opt_name": "innodb_thread_sleep_delay",
        "type": "integer",
        "default": "10000",
        "min": "0",
        "max": "1000000",
        "desc": "How long InnoDB threads sleep before joining the InnoDB queue, in microseconds. ",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "innodb_write_io_threads": {
        "opt_name": "innodb_write_io_threads",
        "type": "integer",
        "default": "4",
        "min": "1",
        "max": "64",
        "desc": "The number of I/O threads for write operations in InnoDB.",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "interactive_timeout": {
        "opt_name": "interactive_timeout",
        "type": "integer",
        "default": "3600",
        "min": "1",
        "max": "86400",
        "desc": "The number of seconds the server waits for activity on an interactive connection before closing it",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "join_buffer_size": {
        "opt_name": "join_buffer_size",
        "type": "integer",
        "default": "262144",
        "min": "128",
        "max": "18446744073709547520",
        "desc": "The minimum size of the buffer that is used for plain index scans, range index scans, and joins that do not use indexes and thus perform full table scans. ",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "key_cache_age_threshold": {
        "opt_name": "key_cache_age_threshold",
        "type": "integer",
        "default": "300",
        "min": "100",
        "max": "4294967295",
        "desc": "This characterizes the number of hits a hot block has to be untouched until it is considered aged enough to be downgraded to a warm block. This specifies the percentage ratio of that number of hits to the total number of blocks in key cache.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "key_cache_block_size": {
        "opt_name": "key_cache_block_size",
        "type": "integer",
        "default": "1024",
        "min": "512",
        "max": "16384",
        "desc": "The default size of key cache blocks",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "key_cache_division_limit": {
        "opt_name": "key_cache_division_limit",
        "type": "integer",
        "default": "100",
        "min": "1",
        "max": "100",
        "desc": "The minimum percentage of warm blocks in key cache",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "lock_wait_timeout": {
        "opt_name": "lock_wait_timeout",
        "type": "integer",
        "default": "31536000",
        "min": "1",
        "max": "31536000",
        "desc": "his variable specifies the timeout in seconds for attempts to acquire metadata locks.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "log_queries_not_using_indexes": {
        "opt_name": "log_queries_not_using_indexes",
        "type": "boolean",
        "default": "OFF",
        "min": "0",
        "max": "0",
        "desc": "Whether queries that do not use indexes are logged to the slow query log",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "long_query_time": {
        "opt_name": "long_query_time",
        "type": "float",
        "default": "10",
        "min": "0",
        "max": "3600",
        "desc": "If a query takes longer than this many seconds, the server increments the Slow_queries status variable",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "low_priority_updates": {
        "opt_name": "low_priority_updates",
        "type": "boolean",
        "default": "OFF",
        "min": "0",
        "max": "0",
        "desc": "If set to true, all INSERT, UPDATE, DELETE, and LOCK TABLE WRITE statements wait until there is no pending SELECT or LOCK TABLE READ on the affected table",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "lower_case_table_names": {
        "opt_name": "lower_case_table_names",
        "type": "integer",
        "default": "0",
        "min": "0",
        "max": "1",
        "desc": "If set to 0, table names are stored as specified and comparisons are case sensitive. If set to 1, they are stored in lowercase on disk and comparisons are not case sensitive.",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "max_allowed_packet": {
        "opt_name": "max_allowed_packet",
        "type": "integer",
        "default": "4194304",
        "min": "1024",
        "max": "1073741824",
        "desc": "The maximum size of one packet or any generated/intermediate string.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "max_binlog_cache_size": {
        "opt_name": "max_binlog_cache_size",
        "type": "integer",
        "default": "18446744073709551615",
        "min": "4096",
        "max": "18446744073709551615",
        "desc": "If a transaction requires more than this many bytes of memory, the server generates a Multi-statement transaction required more than 'max_binlog_cache_size' bytes of storage error",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "max_binlog_size": {
        "opt_name": "max_binlog_size",
        "type": "integer",
        "default": "1073741824",
        "min": "4096",
        "max": "1073741824",
        "desc": "If a write to the binary log causes the current log file size to exceed the value of this variable, the server rotates the binary logs",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "max_binlog_stmt_cache_size": {
        "opt_name": "",
        "type": "integer",
        "default": "18446744073709551615",
        "min": "4096",
        "max": "18446744073709551615",
        "desc": "If nontransactional statements within a transaction require more than this many bytes of memory, the server generates an error",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "max_connect_errors": {
        "opt_name": "max_connect_errors",
        "type": "integer",
        "default": "100",
        "min": "1",
        "max": "4294967295",
        "desc": "If more than this many successive connection requests from a host are interrupted without a successful connection, the server blocks that host from further connections.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "max_connections": {
        "opt_name": "max_connections",
        "type": "integer",
        "default": "151",
        "min": "1",
        "max": "100000",
        "desc": "The maximum permitted number of simultaneous client connections.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "max_digest_length": {
        "opt_name": "max_digest_length",
        "type": "integer",
        "default": "1024",
        "min": "0",
        "max": "1048576",
        "desc": "The maximum number of bytes available for computing normalized statement digests",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "max_heap_table_size": {
        "opt_name": "max_heap_table_size",
        "type": "integer",
        "default": "16777216",
        "min": "16384",
        "max": "1844674407370954752",
        "desc": "This variable sets the maximum size to which user-created MEMORY tables are permitted to grow.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "max_length_for_sort_data": {
        "opt_name": "max_length_for_sort_data",
        "type": "integer",
        "default": "1024",
        "min": "4",
        "max": "8388608",
        "desc": "The cutoff on the size of index values that determines which filesort algorithm to use.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "max_prepared_stmt_count": {
        "opt_name": "max_prepared_stmt_count",
        "type": "integer",
        "default": "16382",
        "min": "0",
        "max": "1048576",
        "desc": "This variable limits the total number of prepared statements in the server.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "max_seeks_for_key": {
        "opt_name": "max_seeks_for_key",
        "type": "integer",
        "default": "18446744073709551615",
        "min": "1",
        "max": "18446744073709551615",
        "desc": "Limit the assumed maximum number of seeks when looking up rows based on a key",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "max_user_connections": {
        "opt_name": "max_user_connections",
        "type": "integer",
        "default": "0",
        "min": "0",
        "max": "10240",
        "desc": "The maximum permitted number of simultaneous client connections per user.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "max_write_lock_count": {
        "opt_name": "max_write_lock_count",
        "type": "integer",
        "default": "18446744073709551615",
        "min": "1",
        "max": "18446744073709551615",
        "desc": "After this many write locks, permit some pending read lock requests to be processed in between.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "metadata_locks_cache_size": {
        "opt_name": "metadata_locks_cache_size",
        "type": "integer",
        "default": "1024",
        "min": "1",
        "max": "1048576",
        "desc": "The size of the metadata locks cache. The server uses this cache to avoid creation and destruction of synchronization objects",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "metadata_locks_hash_instances": {
        "opt_name": "metadata_locks_hash_instances",
        "type": "integer",
        "default": "8",
        "min": "1",
        "max": "1024",
        "desc": "The set of metadata locks can be partitioned into separate hashes to permit connections accessing different objects to use different locking hashes and reduce contention",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "myisam_sort_buffer_size": {
        "opt_name": "myisam_sort_buffer_size",
        "type": "integer",
        "default": "8388608",
        "min": "262144",
        "max": "16777216",
        "desc": "The size of the buffer that is allocated when sorting MyISAM indexes during a REPAIR TABLE or when creating indexes with CREATE INDEX or ALTER TABLE",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "net_read_timeout": {
        "opt_name": "net_read_timeout",
        "type": "integer",
        "default": "30",
        "min": "1",
        "max": "4294967295",
        "desc": "The number of seconds to wait for more data from a connection before aborting the read.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "net_retry_count": {
        "opt_name": "net_retry_count",
        "type": "integer",
        "default": "10",
        "min": "1",
        "max": "4294967295",
        "desc": "If a read or write on a communication port is interrupted, retry this many times before giving up.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "net_write_timeout": {
        "opt_name": "net_write_timeout",
        "type": "integer",
        "default": "60",
        "min": "1",
        "max": "4294967295",
        "desc": "The number of seconds to wait for a block to be written to a connection before aborting the write.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "open_files_limit": {
        "opt_name": "open_files_limit",
        "type": "integer",
        "default": "5000",
        "min": "4000",
        "max": "102400",
        "desc": "The number of files that the operating system permits mysqld to open.",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "performance_schema": {
        "opt_name": "performance_schema",
        "type": "boolean",
        "default": "OFF",
        "min": "0",
        "max": "0",
        "desc": "Whether enable the performance schema.",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "query_alloc_block_size": {
        "opt_name": "query_alloc_block_size",
        "type": "integer",
        "default": "8192",
        "min": "1024",
        "max": "18446744073709551615",
        "desc": "The allocation size of memory blocks that are allocated for objects created during statement parsing and execution.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "query_cache_limit": {
        "opt_name": "query_cache_limit",
        "type": "integer",
        "default": "1048576",
        "min": "1",
        "max": "18446744073709551615",
        "desc": "Do not cache results that are larger than this number of bytes. The default value is 1MB.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "query_cache_min_res_unit": {
        "opt_name": "query_cache_min_res_unit",
        "type": "integer",
        "default": "4096",
        "min": "512",
        "max": "18446744073709551615",
        "desc": "The minimum size (in bytes) for blocks allocated by the query cache",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "query_cache_size": {
        "opt_name": "query_cache_size",
        "type": "integer",
        "default": "1048576",
        "min": "0",
        "max": "18446744073709551615",
        "desc": "The amount of memory allocated for caching query results. By default, the query cache is disabled.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "query_cache_type": {
        "opt_name": "query_cache_type",
        "type": "enum",
        "default": "OFF",
        "min": "0",
        "max": "0",
        "desc": "Set the query cache type.",
        "enum_value": [
            "OFF",
            "ON",
            "DEMAND"
        ],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "query_cache_wlock_invalidate": {
        "opt_name": "query_cache_wlock_invalidate",
        "type": "boolean",
        "default": "OFF",
        "min": "0",
        "max": "0",
        "desc": "Invalidate queries in query cache on LOCK for write",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "query_prealloc_size": {
        "opt_name": "query_prealloc_size",
        "type": "integer",
        "default": "8192",
        "min": "8192",
        "max": "18446744073709551615",
        "desc": "The size of the persistent buffer used for statement parsing and execution. This buffer is not freed between statements.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "range_alloc_block_size": {
        "opt_name": "range_alloc_block_size",
        "type": "integer",
        "default": "4096",
        "min": "4096",
        "max": "18446744073709551615",
        "desc": "The size of blocks that are allocated when doing range optimization.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "read_rnd_buffer_size": {
        "opt_name": "read_rnd_buffer_size",
        "type": "integer",
        "default": "262144",
        "min": "1",
        "max": "2147483647",
        "desc": "This variable is used for reads from MyISAM tables, and, for any storage engine, for Multi-Range Read optimization.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "skip_name_resolve": {
        "opt_name": "skip_name_resolve",
        "type": "boolean",
        "default": "OFF",
        "min": "0",
        "max": "0",
        "desc": "skip resolving host names when checking client connection",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "slow_launch_time": {
        "opt_name": "slow_launch_time",
        "type": "integer",
        "default": "2",
        "min": "1",
        "max": "10",
        "desc": "If creating a thread takes longer than this many seconds, the server increments the Slow_launch_threads status variable",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "sort_buffer_size": {
        "opt_name": "sort_buffer_size",
        "type": "integer",
        "default": "262144",
        "min": "32768",
        "max": "18446744073709551615",
        "desc": "Each session that must perform a sort allocates a buffer of this size. sort_buffer_size is not specific to any storage engine and applies in a general manner for optimization",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "sql_auto_is_null": {
        "opt_name": "sql_auto_is_null",
        "type": "boolean",
        "default": "OFF",
        "min": "0",
        "max": "1",
        "desc": "If this variable is set to 1, then you can find the value of an automatically generated AUTO_INCREMENT value",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 0,
        "runtime_only": 1
    },
    "sql_buffer_result": {
        "opt_name": "sql_buffer_result",
        "type": "boolean",
        "default": "OFF",
        "min": "0",
        "max": "1",
        "desc": "If set to 1, sql_buffer_result forces results from SELECT statements to be put into temporary tables. ",
        "enum_value": [
            "ON",
            "OFF"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "sql_mode": {
        "opt_name": "sql_mode",
        "type": "enum",
        "default": "NO_ENGINE_SUBSTITUTION",
        "min": "0",
        "max": "0",
        "desc": "The current server SQL mode.",
        "enum_value": [
            "",
            "NO_ENGINE_SUBSTITUTION",
            "ALLOW_INVALID_DATES",
            "ANSI_QUOTES",
            "ERROR_FOR_DIVISION_BY_ZERO",
            "HIGH_NOT_PRECEDENCE",
            "IGNORE_SPACE",
            "NO_AUTO_CREATE_USER",
            "NO_AUTO_VALUE_ON_ZERO",
            "NO_BACKSLASH_ESCAPES",
            "NO_DIR_IN_CREATE",
            "NO_ENGINE_SUBSTITUTION",
            "NO_FIELD_OPTIONS",
            "NO_KEY_OPTIONS",
            "NO_TABLE_OPTIONS",
            "NO_UNSIGNED_SUBTRACTION",
            "NO_ZERO_DATE",
            "NO_ZERO_IN_DATE",
            "ONLY_FULL_GROUP_BY",
            "PAD_CHAR_TO_FULL_LENGTH",
            "PIPES_AS_CONCAT",
            "REAL_AS_FLOAT",
            "STRICT_ALL_TABLES",
            "STRICT_TRANS_TABLES"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "sync_binlog": {
        "opt_name": "sync_binlog",
        "type": "integer",
        "default": "0",
        "min": "0",
        "max": "4294967295",
        "desc": "Controls the number of binary log commit groups to collect before synchronizing the binary log to disk",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "table_definition_cache": {
        "opt_name": "table_definition_cache",
        "type": "integer",
        "default": "400",
        "min": "400",
        "max": "4048",
        "desc": "The number of table definitions (from .frm files) that can be stored in the definition cache.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "table_open_cache": {
        "opt_name": "table_open_cache",
        "type": "integer",
        "default": "2000",
        "min": "1",
        "max": "524288",
        "desc": "The number of open tables for all threads. Increasing this value increases the number of file descriptors that mysqld requires.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "table_open_cache_instances": {
        "opt_name": "table_open_cache_instances",
        "type": "integer",
        "default": "1",
        "min": "1",
        "max": "64",
        "desc": "The number of table cache instances",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "thread_cache_size": {
        "opt_name": "thread_cache_size",
        "type": "integer",
        "default": "0",
        "min": "0",
        "max": "16384",
        "desc": "How many threads we should keep in a cache for reuse",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "thread_stack": {
        "opt_name": "thread_stack",
        "type": "integer",
        "default": "262144",
        "min": "131072",
        "max": "18446744073709551615",
        "desc": "The stack size for each thread",
        "enum_value": [],
        "need_reboot": 1,
        "runtime_only": 0
    },
    "time_zone": {
        "opt_name": "default_time_zone",
        "type": "string",
        "default": "SYSTEM",
        "min": "0",
        "max": "0",
        "desc": "Set the global server time zone, default follow the SYSTEM, and it's values can be set in several formats, such as SYSTEM, +8:00, -6:00, Europe/Helsinki etc, For more information, please consult mysql documents",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "tmp_table_size": {
        "opt_name": "tmp_table_size",
        "type": "integer",
        "default": "16777216",
        "min": "1024",
        "max": "18446744073709551615",
        "desc": "The maximum size of internal in-memory temporary tables. This variable does not apply to user-created MEMORY tables.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "transaction_alloc_block_size": {
        "opt_name": "transaction_alloc_block_size",
        "type": "integer",
        "default": "8192",
        "min": "1024",
        "max": "131072",
        "desc": "The amount in bytes by which to increase a per-transaction memory pool which needs memory.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "transaction_prealloc_size": {
        "opt_name": "transaction_prealloc_size",
        "type": "integer",
        "default": "4096",
        "min": "1024",
        "max": "131072",
        "desc": "There is a per-transaction memory pool from which various transaction-related allocations take memory.",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "tx_isolation": {
        "opt_name": "transaction_isolation",
        "type": "enum",
        "default": "REPEATABLE-READ",
        "min": "0",
        "max": "0",
        "desc": "Default transaction isolation level",
        "enum_value": [
            "READ-COMMITTED",
            "REPEATABLE-READ"
        ],
        "need_reboot": 0,
        "runtime_only": 0
    },
    "wait_timeout": {
        "opt_name": "wait_timeout",
        "type": "integer",
        "default": "3600",
        "min": "1",
        "max": "86400",
        "desc": "The number of seconds the server waits for activity on a noninteractive connection before closing it",
        "enum_value": [],
        "need_reboot": 0,
        "runtime_only": 0
    }
}
